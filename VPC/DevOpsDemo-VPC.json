{
  "Description": "This template deploys a VPC, with a pair of public and private subnets spread across two Availability Zones. It deploys an Internet Gateway, with a default route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),and default routes for them in the private subnets.",
  "Parameters": {
    "Account": {
      "Description": "AWS Account Type where this CFT will be deployed",
      "Default": "dev",
      "Type": "String",
      "AllowedValues": [
        "dev",
        "preprod",
        "prod"
      ]
    }, 
    "TemplateVersion": {
      "Description": "Version of CFT deployed for this Cloud Formation Stack",
      "Type": "String"
    },
    "VpcName": {
      "Description": "Prefix the VPC resource names for easy identification",
      "Default": "DevopsDemo",
      "Type": "String"
    }
  },
  "Mappings": {
    "dev": {
      "us-west-2": {
        "Zone1": "us-west-2a",
        "Zone2": "us-west-2b"
      },
      "SubnetConfig": {
        "VPC": "10.10.0.0/24",
        "Public1": "10.10.0.0/26",
        "Public2": "10.10.0.64/26",
        "Private1": "10.10.0.128/26",
        "Private2": "10.10.0.192/26"
      }
    },
    "preprod": {
      "us-west-2": {
        "Zone1": "us-west-2a",
        "Zone2": "us-west-2b"
      },
      "SubnetConfig": {
        "VPC": "10.10.16.0/24",
        "Public1": "10.10.16.0/26",
        "Public2": "10.10.16.64/26",
        "Private1": "10.10.16.128/26",
        "Private2": "10.10.16.192/26"
      }
    },
    "prod": {
      "us-west-2": {
        "Zone1": "us-west-2a",
        "Zone2": "us-west-2b"
      },
      "SubnetConfig": {
        "VPC": "10.10.32.0/24",
        "Public1": "10.10.32.0/26",
        "Public2": "10.10.32.64/26",
        "Private1": "10.10.32.128/26",
        "Private2": "10.10.32.192/26"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            "SubnetConfig",
            "VPC"
          ]
        },
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" }
                ]
              ]
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public1"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" }
                ]
              ]
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            "SubnetConfig",
            "Public1"
          ]
        },
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            { "Ref": "AWS::Region" },
            "Zone1"
          ]
        },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public1"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PublicSubnet1"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            "SubnetConfig",
            "Public2"
          ]
        },
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            { "Ref": "AWS::Region" },
            "Zone2"
          ]
        },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public2"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PublicSubnet2"
                ]
              ]
            }
          }
        ]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            "SubnetConfig",
            "Private1"
          ]
        },
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            { "Ref": "AWS::Region" },
            "Zone1"
          ]
        },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Private1"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PrivateSubnet1"
                ]
              ]
            }
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            "SubnetConfig",
            "Private2"
          ]
        },
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": {
          "Fn::FindInMap": [
            { "Ref": "Account" },
            { "Ref": "AWS::Region" },
            "Zone2"
          ]
        },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Private2"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PrivateSubnet2"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public1"
          },
         
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PublicRouteTable"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public1"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PublicNetworkAcl"
                ]
              ]
            }
          }
        ]
      }
    },
    "InboundHTTPPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "false",
        "NetworkAclId": { "Ref": "PublicNetworkAcl" },
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100"
      }
    },
    "OutboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "NetworkAclId": { "Ref": "PublicNetworkAcl" },
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100"
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "SubnetId": { "Ref": "PublicSubnet1" }
      }
    },
    "PublicSubnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "PublicNetworkAcl" },
        "SubnetId": { "Ref": "PublicSubnet1" }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "SubnetId": { "Ref": "PublicSubnet2" }
      }
    },
    "PublicSubnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "PublicNetworkAcl" },
        "SubnetId": { "Ref": "PublicSubnet2" }
      }
    },
    "PrivateRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Private1"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PrivateRouteTable1"
                ]
              ]
            }
          }
        ]
      }
    },
    "PrivateRouteTable2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Private2"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PrivateRouteTable2"
                ]
              ]
            }
          }
        ]
      }
    },
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Private1"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ":", [
                  { "Ref": "VpcName" },
                  { "Ref": "Account" },
                  "PrivateNetworkAcl"
                ]
              ]
            }
          }
        ]
      }
    },
    "InboundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "false",
        "NetworkAclId": { "Ref": "PrivateNetworkAcl" },
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100"
      }
    },
    "OutBoundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "NetworkAclId": { "Ref": "PrivateNetworkAcl" },
        "PortRange": {
          "From": "0",
          "To": "65535"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100"
      }
    },
    "PrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable1" },
        "SubnetId": { "Ref": "PrivateSubnet1" }
      }
    },
    "PrivateSubnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "PrivateNetworkAcl" },
        "SubnetId": { "Ref": "PrivateSubnet1" }
      }
    },
    "PrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable2" },
        "SubnetId": { "Ref": "PrivateSubnet2" }
      }
    },
    "PrivateSubnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "PrivateNetworkAcl" },
        "SubnetId": { "Ref": "PrivateSubnet2" }
      }
    },
    "NatGateway1EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "VPC"
			}
	},
    "NatGateway2EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "VPC"
			}
	},
	"NatGateway1": {
	   "DependsOn" : "InternetGatewayAttachment",
       "Type" : "AWS::EC2::NatGateway",
       "Properties" : {
          "AllocationId" : { "Fn::GetAtt" : ["NatGateway1EIP", "AllocationId"]},
          "SubnetId" : { "Ref" : "PublicSubnet1"},
          "Tags" : [ 
            {
               "Key": "Name",
               "Value": { 
               	   "Fn::Join": [ ":", [
                     { "Ref": "VpcName" },
                     { "Ref": "Account" },
                     "NatGateway1"]]
                }
            } 
          ]
       }
	},
	"NatGateway2": {
	   "DependsOn" : "InternetGatewayAttachment",
       "Type" : "AWS::EC2::NatGateway",
       "Properties" : {
          "AllocationId" : { "Fn::GetAtt" : ["NatGateway2EIP", "AllocationId"]},
          "SubnetId" : { "Ref" : "PublicSubnet2"},
          "Tags" : [ 
            {
               "Key": "Name",
               "Value": { 
               	   "Fn::Join": [ ":", [
                     { "Ref": "VpcName" },
                     { "Ref": "Account" },
                     "NatGateway2"]]
                }
            } 
          ]
       }
	},
	"DefaultPrivateRoute1": {
		"Type": "AWS::EC2::Route",
		"Properties": {
			"RouteTableId": { "Ref" : "PrivateRouteTable1" },
			"DestinationCidrBlock": "0.0.0.0/0",
			"NatGatewayId": { "Ref" : "NatGateway1" }
		}
	},
	"DefaultPrivateRoute2": {
		"Type": "AWS::EC2::Route",
		"Properties": {
			"RouteTableId": { "Ref" : "PrivateRouteTable2" },
			"DestinationCidrBlock": "0.0.0.0/0",
			"NatGatewayId": { "Ref" : "NatGateway2" }
		}
	}
  },
  "Outputs": {
    "VpcId": {
      "Description": "ID of VPC",
      "Value": { "Ref": "VPC" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-VpcId" }
      }
    },
    "PublicSubnet1": {
      "Description": "SubnetId 1 for internet-facing instances",
      "Value": { "Ref": "PublicSubnet1" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet1" }
      }
    },
    "PublicSubnet2": {
      "Description": "SubnetId 2 for internet-facing instances",
      "Value": { "Ref": "PublicSubnet2" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet2" }
      }
    },
    "PrivateSubnet1": {
      "Description": "SubnetIds for application instances in private subnet",
      "Value": { "Ref": "PrivateSubnet1" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet1" }
      }
    },
    "PrivateSubnet2": {
      "Description": "SubnetIds for application instances in private subnet",
      "Value": { "Ref": "PrivateSubnet2" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet2" }
      }
    },
    "TemplateVersion": {
      "Description": "Version of Cloud Formation Template used to create this Cloud Formation Stack",
      "Value": { "Ref": "TemplateVersion" }
    }
  }
}
